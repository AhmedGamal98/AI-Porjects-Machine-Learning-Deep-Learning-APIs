from flask import Flask, request, jsonify, json
import google.generativeai as genai
import random
import string
import os
import re

# ----------------- Configuration -----------------
app = Flask(__name__)
GENAI_API_KEY = "AIzaSyDXqK4wDaXRm_Fn5uigJOmKLsnUE4a6Mw8"
genai.configure(api_key=GENAI_API_KEY)
gemini_model = genai.GenerativeModel("gemini-1.5-flash")

# ----------------- Prompt Builder -----------------
def build_prompt(data):
    return f"""
        ุฃุฑุบุจ ูู ุชูููุฏ ูุญุชูู ุงุญุชุฑุงูู ูุณูุฑุฉ ุฐุงุชูุฉ ูุณุชุฎุฏูุ ุจุงูุงุนุชูุงุฏ ููุท ุนูู ุงูุจูุงูุงุช ุงููุนููุฉ ุงูุชุงููุฉ ุงูุชู ุชู ุฌูุนูุง ูู ุงููุธุงู.
        ูุฑุฌู ุนุฏู ุงูุชุฑุงุถ ุฃู ูุนูููุงุช ุบูุฑ ููุฌูุฏุฉุ ูุงูุนูู ููุท ุนูู ูุง ุชู ุชูุฏููู.

        ๐น ุงูุจูุงูุงุช ุงููุฏุฎูุฉ:
        ๐ค ุงูุจูุงูุงุช ุงูุดุฎุตูุฉ:
        ุงููุณูู ุงููุธููู ุงูุญุงูู: {data.get("job_title", "")}

        ๐ ุงููุคููุงุช ุงูุนูููุฉ (ูุฏ ุชููู ุฃูุซุฑ ูู ูุคูู):
        ุงูุฏุฑุฌุฉ ุงูุนูููุฉ: {data.get("edu_degree", "")}
        ุงูุชุฎุตุต: {data.get("major_name", "")}
        ุณูุฉ ุงูุชุฎุฑุฌ: {data.get("graduation_year", "")}
        ุญุงูุฉ ุงูุชุฎุฑุฌ (ูุซูุงู: ูุชุฎุฑุฌุ ูุณุชูุฑ): {data.get("edu_status", "")}

        ๐ผ ุงูุฎุจุฑุงุช ุงูุนูููุฉ (ูุฏ ุชููู ูุชุนุฏุฏุฉ):
        ููู ุฎุจุฑุฉ:
        ููุน ุงูุฎุจุฑุฉ: {data.get("exp_type", "")}
        ุงููุณูู ุงููุธููู: {data.get("exp_title", "")}
        ุงุณู ุงูุฌูุฉ: {data.get("exp_place", "")}
        ูุตู ุงูููุงู ุงููุธูููุฉ: {data.get("exp_summary", "")}

        ๐ ุงูุฏูุฑุงุช ูุงูุดูุงุฏุงุช:
        ูุฑุฌู ุงูุชูููุฒ ุจูู:
        "ุงูุฏูุฑุงุช ุงูุชุฏุฑูุจูุฉ" ู
        "ุงูุดูุงุฏุงุช ุงูุงุญุชุฑุงููุฉ"
        ููู ุนูุตุฑ:
        ุงูุงุณู: {data.get("cert_name", "")}
        ุงูุฌูุฉ ุงููุงูุญุฉ: {data.get("cert_issuer", "")}
        ุงูููุน: {data.get("cert_type", "")} โ (ุฏูุฑุฉ ุงู ุดูุงุฏุฉ ุงุญุชุฑุงููุฉ)

        ๐ฃ ุงููุบุงุช:
        (ูุฏ ุชุดูู ุฃูุซุฑ ูู ูุบุฉ)
        ุงููุบุฉ: {data.get("language", "")}
        ุงููุณุชูู: {data.get("level", "")}

        ๐ ุงูุฅูุฌุงุฒุงุช:
        ูุตู ูู ุฅูุฌุงุฒ: {data.get("achievement", "")}

        ๐ธ ุงููุทููุจ ูู ุงูุฐูุงุก ุงูุงุตุทูุงุนู:

        **1. ุชูููุฏ 20 ููุงุฑุฉ ุงุญุชุฑุงููุฉ:**
        ููุฑุฌู ุงุณุชุฎุฑุงุฌ ุงูููุงุฑุงุช ูู:
        - ุงููุคููุงุช ุงูุฃูุงุฏูููุฉ
        - ุงูุฎุจุฑุงุช ุงูุนูููุฉ
        - ูุญุชูู ุงูุฏูุฑุงุช ูุงูุดูุงุฏุงุช
        - ุงูุฅูุฌุงุฒุงุช
        - ูุงููุบุงุช ุฅู ูุงู ููุง ุฏูุฑ ูุธููู

        ๐ **ููู ุฌุฏูุง**:
        โ ูุง ููุณูุญ ุจุฅุฏุฑุงุฌ ุฃู ููุงุฑุงุช ุชูููุฉ ุนุงูุฉ (ูุซู ุจุฑูุฌุฉุ ุชุญููู ุจูุงูุงุชุ ุฅุฏุงุฑุฉ ูุดุงุฑูุนุ ุฅูุฎ).
        โ ุงูููุงุฑุงุช ูุฌุจ ุฃู ุชููู ููุท ูู ุฃุญุฏ ุงูููุนูู ุงูุชุงูููู:
          1. **ููุงุฑุงุช ุดุฎุตูุฉ** (ูุซู: ุงูุนูู ุงูุฌูุงุนูุ ุงูุงูุชุฒุงูุ ุงูุงูุถุจุงุทุ ...).
          2. **ููุงุฑุงุช ูุฑุชุจุทุฉ ุจุงูุชุฎุตุต ุงูุฏุฑุงุณู** ููุท (ูุซู: ููุงุฑุงุช ูุญุงุณุจูุฉุ ููุฏุณูุฉุ ุฅุฏุงุฑูุฉ... ุฅูุฎ ุญุณุจ ุงูุชุฎุตุต ุงููุฐููุฑ).

        ๐น ููู ููุงุฑุฉ:
        ุงุณู ุงูููุงุฑุฉ  
        ููุน ุงูููุงุฑุฉ (ุดุฎุตูุฉ / ูุญุงุณุจูุฉ / ููุฏุณูุฉ / ุทุจูุฉ / ูุงููููุฉ... ุญุณุจ ุงูุชุฎุตุต)

        **2. ุตูุงุบุฉ ูุฏู ูุธููู ุงุญุชุฑุงูู ูุฎุชุตุฑ:**
        ูุฑุฌู ูุชุงุจุฉ ูุฏู ูุธููู ููููู ูู 4 ุฅูู 6 ุฃุณุทุฑุ ุจุงููุบุฉ ุงูุนุฑุจูุฉ ุงููุตุญูุ ูุงุถุญ ูููููุ ูุฌุงูุฒ ููุงุณุชุฎุฏุงู ูู ุจุฏุงูุฉ ุงูุณูุฑุฉ ุงูุฐุงุชูุฉ.

        โ ุงููุฏู ูุฌุจ ุฃู ูููู:
        - **ุฅุจุฏุงุนููุง ููููุฒูุง**
        - ูุง ููุชูู ููุท ุจุฐูุฑ ุงููุคููุงุช ุงูุฏุฑุงุณูุฉ ูุงูุดูุงุฏุงุช
        - ูุนูุณ ุงูุทููุญุ ุงูููู ุงูููููุฉุ ูุงููุฏุฑุฉ ุนูู ุชูุฏูู ูููุฉ ูู ุงูุนูู
        - ุฅุฐุง ุชููุฑุช ุฎุจุฑุงุช ุฃู ุดูุงุฏุงุช: ููุฑุงุนู ุฅุจุฑุงุฒ ุงูููุงุกุฉ ุงูููููุฉ.
        - ุฅุฐุง ูู ุชุชููุฑ: ุงุฌุนู ุงููุฏู ุทููุญูุง ููุงูุนููุงุ ูููุธูุฑ ุงูุงุณุชุนุฏุงุฏ ููุชุทูุฑ.

        **3. ุงูุชุฑุงุญ ุฏูุฑุงุช ุชุฏุฑูุจูุฉ ูุดูุงุฏุงุช ุงุญุชุฑุงููุฉ ุฌุฏูุฏุฉ:**
        ูุฐุง ุงูุทูุจ ุฏุงุฆููุง ูุทููุจุ ุณูุงุก ููุฌุฏุช ุฏูุฑุงุช ุณุงุจูุฉ ุฃู ูุง.

        ูุฑุฌู ุงูุชุฑุงุญ ุฏูุฑุงุช ูุดูุงุฏุงุช:
        - ูุฑุชุจุทุฉ ุจุงูุชุฎุตุต ุงูุฃูุงุฏููู ุฃู ูุฌุงูุงุช ุงูุฎุจุฑุฉ
        - ูุนุชุฑู ุจูุง ูุญูููุง ุฃู ุนุงููููุง
        - ููุงุณุจุฉ ููุณุชูู ุงููุณุชุฎุฏู (ูุจุชุฏุฆ / ูุชูุณุท / ูุชูุฏู)
        - ูุฌุจ ุงูุชุฑุงุญ ูู 2 ุงูู 3 ุดูุงุฏุงุช ุงุญุชุฑุงููุฉ ููุฐูู ูู 2 ุงูู 3 ุงูุฏูุฑุงุช ุงูุชุฏุฑูุจูุฉ

        ุฅุฐุง ูุงู ูุฏู ุงููุณุชุฎุฏู ุดูุงุฏุงุช ุณุงุจูุฉ:
        ๐ธ ุงูุชุฑุญ ูุญุชูู ุฃูุซุฑ ุชูุฏููุง ุฃู ูููููุง.

        โ ุชุนูููุงุช ุนุงูุฉ:
        - ูุง ุชูุชุฑุถ ุฃู ุจูุงูุงุช ุบูุฑ ููุฌูุฏุฉ
        - ูุง ุชุณุชุฎุฏู ุตูุบูุง ุนุงูุฉ ุฃู ุฅูุดุงุฆูุฉ
        - ุงุณุชุฎุฏู ูุบุฉ ูุงุถุญุฉ ูุงุญุชุฑุงููุฉ
        - ุงุฌุนู ุงููุชุงุฆุฌ ูุงุจูุฉ ููุงุณุชุฎุฏุงู ุงููุจุงุดุฑ ูู ููู ุณูุฑุฉ ุฐุงุชูุฉ ุฏูู ุชุนุฏูู

        ๐ ุงูุชูุณูู ุงููุทููุจ:

        **1. 20 ููุงุฑุฉ ุงุญุชุฑุงููุฉ:**

        | ุงุณู ุงูููุงุฑุฉ               | ููุน ุงูููุงุฑุฉ       |
        |----------------------------|------------------|
        | ุงูุนูู ุงูุฌูุงุนู             | ุดุฎุตูุฉ            |
        | ุงูุงูุชุฒุงู ุจุงูููุงุนูุฏ        | ุดุฎุตูุฉ            |
        | ุงูุชูููุฑ ุงูุชุญูููู          | ุดุฎุตูุฉ            |
        | ...                        | ูุญุงุณุจูุฉ / ููุฏุณูุฉ ... |

        **2. ูุฏู ูุธููู:**

        ุตูุงุบุฉ ุงุญุชุฑุงููุฉุ 6-4 ุฃุณุทุฑุ ุชุนูุณ ุงูุทููุญ ูุงููููุฉ ุงูููููุฉ.
        ูุนุฏู ุฐูุฑ ููุงุฆูุง ุงู ูุนูููุฉ ูู ุงููุนูููุงุช ุงููุนุทุงู ูู ุงููุชุณุฎุฏู ูุซู ุงูุดูุงุฏุงุช ูุงูุชุฏุฑูุจุงุช ูุฎูุงูู ููุท ุงุฌุนู ุงููุฏู ุงููุธููู ุนุงู ุจูุงุก ุนูู ุงููุนุทูุงุช ูุงููุนูููุงุช ุงููุนุทุงู ุงููู
        ุงุจุฏุฃ ุฏุงุฆูุง ุจุฌููุฉ ุณุนู ููุงูุถูุงู ุฅูู ุจูุฆุฉ ุนูู ุงุญุชุฑุงููุฉ. ูู ูุฌุงู ุซู ูุชู ุฐูุฑ ุงููุฌุงู ุจูุงุก ุนูู ุงููุนุทูุงุช.
        ูุฌุจ ุฐูุฑ ุงููููุฉ ุงููุนุงูุฉ ุงูุชู ุณูู ุงุญูููุง ุนูุฏ ุงูุงูุถูุงู ุงูู ุงูุนูู ุจุนุฑุถ ููุงุฑุงุชู ุงูุชูููุฉ ูุงูุชุนููููุฉ ูููููุฉ ุงุณุชุฎุฏุงููุง ูุชุทุจูู ุงููุฏู.
        ูููู ุงููุฏู ุนุจุงุฑุฉ ุนู 4 ุงูู 6 ุงุณุทุฑ

        ูุซุงู ูุดูู ุงููุงุชุฌ ุงููุฑุงุฏ ุงุณุชุฎุฑุงุฌู

        ุฃุณุนู ููุงูุถูุงู ุฅูู ุจูุฆุฉ ุนูู ุงุญุชุฑุงููุฉ ูู ุงููุฌุงู ุงููุงููุ ุญูุซ ุฃุณุงูู ูู ุฏุนู ุงูุนูููุงุช ุงููุญุงุณุจูุฉ ูุชุญููู ุงูุฃูุฏุงู ุงููุงููุฉ ูููุคุณุณุฉ ูู ุฎูุงู ููุงุฑุงุชู ูู ุชุญููู ุงูุจูุงูุงุช ูุฅุนุฏุงุฏ ุงูุชูุงุฑูุฑุ ูุงูุงูุชุฒุงู ุจูุนุงููุฑ ุงูุฌูุฏุฉ ูุงูุงูุชุซุงู ุงููุงูู. ุฃุคูู ุจุฃูููุฉ ุงูุชุทููุฑ ุงููุณุชูุฑ ูุฃุณุนู ูุชุนุฒูุฒ ููุงุกุชู ุงูููููุฉ ุจุดูู ุฏุงุฆู.

        **3. ุงูุชุฑุงุญ ุฏูุฑุงุช ุชุฏุฑูุจูุฉ ูุดูุงุฏุงุช ุงุญุชุฑุงููุฉ ุฌุฏูุฏุฉ:**

        - ุงุณู ุงูุฏูุฑุฉ  
        - ุงูููุตุฉ  
        - ุงูููุน (ุฏูุฑุฉ ุงู ุดูุงุฏุฉ ุงุญุชุฑุงููุฉ)  
        - ููุงุญุธุงุช

        ูุซุงู ูุดูู ุงููุงุชุฌ ุงููุฑุงุฏ ุงุณุชุฎุฑุงุฌู

        * **ุงุณู ุงูุฏูุฑุฉ:**  Financial Accounting Fundamentals  
        * **ุงูููุตุฉ:** Coursera, edX 
        * **ุงูููุน:** ุฏูุฑุฉ ุชุฏุฑูุจูุฉ  
        * **ููุงุญุธุงุช:**  ุชููุฏู ูุฐู ุงูุฏูุฑุฉ ุฃุณุงุณูุงุช ุงููุญุงุณุจุฉ ุงููุงููุฉุ ูุชุดูู ุฅุนุฏุงุฏ ุงูุจูุงูุงุช ุงููุงููุฉ ูุชุญููููุง.  
    
        * **ุงุณู ุงูุฏูุฑุฉ:**  Advanced Excel for Accounting & Finance  
        * **ุงูููุตุฉ:** Udemy, LinkedIn Learning 
        * **ุงูููุน:** ุฏูุฑุฉ ุชุฏุฑูุจูุฉ  
        * **ููุงุญุธุงุช:**  ุชูุฑูุฒ ูุฐู ุงูุฏูุฑุฉ ุนูู ุงุณุชุฎุฏุงู ุฅูุณู ูู ุงููุญุงุณุจุฉุ ูุน ุงูุชุนูู ูู ูุธุงุฆู ูุชูุฏูุฉ ูุซู Pivot Tables ู VBA ูุชุญููู ุงูุจูุงูุงุช ุงููุงููุฉ.  
    
        * **ุงุณู ุงูุฏูุฑุฉ:**  IFRS - International Financial Reporting Standards  
        * **ุงูููุตุฉ:** ACCA, Coursera 
        * **ุงูููุน:** ุฏูุฑุฉ ุชุฏุฑูุจูุฉ  
        * **ููุงุญุธุงุช:**  ุชูุบุทู ูุฐู ุงูุฏูุฑุฉ ุงููุนุงููุฑ ุงูุฏูููุฉ ูุฅุนุฏุงุฏ ุงูุชูุงุฑูุฑ ุงููุงููุฉุ ูุชูุณุงุนุฏ ูู ููู ููููุฉ ุฅุนุฏุงุฏ ุงูุจูุงูุงุช ุงููุงููุฉ ููููุง ูููุนุงููุฑ ุงูุนุงูููุฉ.  
    
        * **ุงุณู ุงูุฏูุฑุฉ:**  Cost Accounting and Management  
        * **ุงูููุตุฉ:** edX, Udemy 
        * **ุงูููุน:** ุฏูุฑุฉ ุชุฏุฑูุจูุฉ  
        * **ููุงุญุธุงุช:**  ุชูุฑูุฒ ูุฐู ุงูุฏูุฑุฉ ุนูู ูุญุงุณุจุฉ ุงูุชูุงููู ูุฃุณุงููุจ ุชุญููู ุงูุชูุงูููุ ูุฏูุฑูุง ูู ุฏุนู ุงุชุฎุงุฐ ุงููุฑุงุฑุงุช ุงูุฅุฏุงุฑูุฉ ูุงููุงููุฉ.  
  


        """

# ----------------- Gemini API Call -----------------
def ask_gemini(prompt):
    response = gemini_model.generate_content(prompt)
    return response.text

# ----------------- Extract Arabic Structured Data -----------------
def extract_from_gemini(gemini_output):
    result = {
        "career_objective": "",
        "recommended_courses": [],
        "skills": []
    }

    # ุงุณุชุฎุฑุงุฌ ุฌุฏูู ุงูููุงุฑุงุช ุจูู "**1." ู "**2."
    skills_section = re.search(r"\*\*1\..*?\*\*\n(.*?)\*\*2\.", gemini_output, re.DOTALL)
    if skills_section:
        table_text = skills_section.group(1)
        lines = table_text.strip().split('\n')

        skip_first_skill = True
        for line in lines:
            line = line.strip()
            if line.startswith('|') and not re.match(r'^\|[-\s|]+$', line):
                cols = [col.strip() for col in line.strip('|').split('|')]
                if len(cols) == 2:
                    skill_name, skill_type = cols
                    if skill_name and skill_type:
                        if skip_first_skill:
                            skip_first_skill = False
                            continue
                        result["skills"].append({
                            "skill_name": skill_name,
                            "skill_type": skill_type
                        })

    # ุงุณุชุฎุฑุงุฌ ุงููุฏู ุงููููู ุจูู "**2." ู "**3."
    objective_match = re.search(r"\*\*2\..*?\*\*\n(.*?)(?=\*\*3\.|\Z)", gemini_output, re.DOTALL)
    if objective_match:
        career_obj = objective_match.group(1).strip()
        career_obj = re.sub(r'\n\s+', ' ', career_obj)
        result["career_objective"] = career_obj

    # ุงุณุชุฎุฑุงุฌ ุงูุฏูุฑุงุช ูุงูุดูุงุฏุงุช ูู ุงููุณู "**3."
    courses_section = re.search(r"\*\*3\..*?\*\*\n(.*)", gemini_output, re.DOTALL)
    if courses_section:
        courses_text = courses_section.group(1)

        current_entry = {}
        lines = courses_text.strip().splitlines()
        for line in lines:
            line = line.strip()
            if not line:
                continue

            # ุงุณุชุฎุฑุงุฌ ุงุณู ุงูุฏูุฑุฉ ุฃู ุงูุดูุงุฏุฉ
            title_match = re.search(r"ุงุณู (?:ุงูุฏูุฑุฉ|ุงูุดูุงุฏุฉ):\s*(.+)", line)
            if title_match:
                if current_entry:
                    result["recommended_courses"].append(current_entry)
                title = title_match.group(1).strip()
                title = re.sub(r'^\*+\s*', '', title)
                current_entry = {
                    "title": title,
                    "type": "",
                    "platform": "",
                    "notes": ""
                }
                continue

            # ุงุณุชุฎุฑุงุฌ ุงูููุน
            type_match = re.search(r"ุงูููุน:\s*(.+)", line)
            if type_match and current_entry:
                type_ = type_match.group(1).strip()
                type_ = re.sub(r'^\*+\s*', '', type_)
                current_entry["type"] = type_
                continue

            # ุงุณุชุฎุฑุงุฌ ุงูุฌูุฉ ุงููุงูุญุฉ / ููุตุฉ / ุงูููุตุฉ / ุฌูุฉ ูุงูุญุฉ
            platform_match = re.search(
                r"(?:\*?\s*(?:ุงูุฌูุฉ\s*ุงููุงูุญุฉ|ุฌูุฉ\s*ูุงูุญุฉ|ุงูููุตุฉ|ููุตุฉ)\s*:?\s*)(.+)", line)
            if platform_match and current_entry:
                platform = platform_match.group(1).strip()
                platform = re.sub(r'^\*+\s*', '', platform)

                # ุญุฐู ุฃู ูุตูุต ุชูุณูุฑูุฉ ุฏุงุฎู ุงูุฃููุงุณ
                platform = re.sub(r'\([^)]*\)', '', platform)

                # ุญุฐู "ุฃู ูููุน ูุชุฎุตุต ุขุฎุฑ" ุฅุฐุง ููุฌุฏุช
                platform = re.sub(r'\s*ุฃู\s*ูููุน\s*ูุชุฎุตุต\s*ุขุฎุฑ', '', platform)

                # ุชูุณูู ุงููุต ุนูู "ุฃู" ูุฃุฎุฐ ุฃูู ููุตุฉ ููุท
                platform = re.split(r'\s*ุฃู\s*', platform)[0]

                # ุชูุธูู ุงููุต ูู ุงููุฑุงุบุงุช ูุงูุดุฑุทุงุช ุงููุงุฆูุฉ
                platform = platform.strip().strip('/').strip()

                # ุฅุฐุง ูุงูุช ุงููุชูุฌุฉ ูุงุฑุบุฉุ ุงุฌุนููุง "Coursera"
                if not platform:
                    platform = "Coursera"

                current_entry["platform"] = platform
                continue

            # ุงุณุชุฎุฑุงุฌ ุงูููุงุญุธุงุช
            notes_match = re.search(r"ููุงุญุธุงุช:\s*(.+)", line)
            if notes_match and current_entry:
                notes = notes_match.group(1).strip()
                notes = re.sub(r'^\*+\s*', '', notes)
                current_entry["notes"] = notes
                continue

        # ุฅุถุงูุฉ ุขุฎุฑ ูุฏุฎู
        if current_entry:
            result["recommended_courses"].append(current_entry)


    return result
# ----------------- API Endpoint -----------------
@app.route("/ping", methods=["GET"])
def ping():
    return jsonify({"message": "Server is awake"}), 200


# ----------------- API Endpoint -----------------
@app.route("/generate", methods=["POST"])
def generate():
    data = request.json or {}
    prompt = build_prompt(data)
    gemini_output = ask_gemini(prompt)
    structured_data = extract_from_gemini(gemini_output)

    return jsonify(structured_data), 200

# ----------------- Run App -----------------
if __name__ == "__main__":
    print("App running locally at http://127.0.0.1:5000")
    app.run(port=5000, threaded=True)