from flask import Flask, request, jsonify
import google.generativeai as genai
import random
import string
import re

# ----------------- Configuration -----------------
app = Flask(__name__)
GENAI_API_KEY = "YOUR_GEMINI_API_KEY"
genai.configure(api_key=GENAI_API_KEY)
gemini_model = genai.GenerativeModel("gemini-2.0-flash")

# ----------------- FIELDS -----------------
MANDATORY_FIELDS = ["study_type", "specialization", "field", "system_type"]
OPTIONAL_FIELDS = [
    "national_direction", "project_algorithms", "target_audience", "integration",
    "programming_languages", "technologies", "database_type", "ai_data_type",
    "ai_use_types", "ai_algorithms", "initial_idea", "allow_suggested_users"
]

# ----------------- Creative Element -----------------
def get_creative_spark():
    emojis = ["💡", "✨", "🚀", "🌟", "🧠", "🎯", "📈", "🔬", "🛠️"]
    adjectives = ["مبتكر", "غير تقليدي", "رائد", "فريد", "ملهم", "استثنائي", "ذكي"]
    nouns = ["مفهوم", "حل", "نهج", "تصميم", "فكرة", "مشروع", "نظام"]
    verbs = ["ابتكر", "صمّم", "اكتشف", "طوّر", "أطلق", "استلهم", "ابدأ"]
    return f"{random.choice(emojis)} {random.choice(verbs)} {random.choice(adjectives)} {random.choice(nouns)} – رمز المشروع: {''.join(random.choices(string.ascii_uppercase + string.digits, k=5))}"

# ----------------- Prompt Builder -----------------
def build_prompt(data, missing_fields):
    creative_spark = get_creative_spark()
    filled = "\n".join([f"- **{field.replace('_', ' ').title()}**: {data[field]}" for field in data])
    missing = "\n".join([f"- **{field.replace('_', ' ').title()}**: *(🔄 برجاء توليد قيمة منطقية ومناسبة بناءً على السياق)*" for field in missing_fields])

    if 'integration' not in data or not data['integration']:
      if 'allow_suggested_users' not in data or not data['allow_suggested_users']:
          # Both 'integration' and 'allow_suggested_users' are missing or empty
          prompt = f"""
         الرجاء توليد نظام متكامل لمشروع تخرج مبتكر، يشمل جميع المكونات الأساسية لأي نظام احترافي مثل:
        • استقبال ومعالجة البيانات
        • تحليل أو تصنيف أو تنفيذ وظائف حسب المجال
        • إدارة العمليات وتتبع حالتها
        • إنشاء تقارير، إشعارات، وصلاحيات متعددة
        • تكامل مع أنظمة خارجية فقط إذا تم تحديد ذلك من قبل المستخدم
        ❗️ إذا كانت بعض الحقول غير محددة من قبل المستخدم، يُسمح للنظام باقتراح قيم مناسبة فقط لهذه الحقول المفقودة، بشرط أن تكون منطقية ومتناسبة مع نوع المشروع والمجال.
        ❌ لا يُسمح بتعديل أو استبدال أي قيمة تم تحديدها من قِبل المستخدم صراحة.
        ❌ لا يُسمح بتضمين أي تقنيات أو خوارزميات أو مفاهيم تتعلق بالذكاء الاصطناعي ما لم يتم طلبها صراحة ضمن بيانات المستخدم.
        ________________________________________
        ✅ تنسيق الرد المطلوب:
        1. **العنوان المقترح:**
        [عنوان واضح ومبتكر للفكرة]
        
        2. **وصف تفصيلي للفكرة مع أمثلة:**
        شرح شامل لطبيعة النظام، المشكلة التي يعالجها، طريقة استخدامه، الجهات المستفيدة، وسيناريوهات تطبيقية حقيقية.
        
        3. **المستخدمون ووظائفهم في النظام:**
        • يجب أن يشمل النظام "مدير النظام".
        • يدعم: تسجيل الدخول، تسجيل الخروج، إنشاء حساب جديد إن لزم.
        • لكل مستخدم: اذكر 5 وظائف واضحة على الأقل.
        o تحديد صفته، و5 وظائف له.
        • يُمنع ذكر اسماء نهائياً
        • يُمنع تكرار المستخدمين أو وظائفهم في قسم منفصل.
        
        4. **مميزات المشروع (لا تقل عن 5):**
        • مميزات عملية توضح قوة المشروع وجدواه.
        • يجب أن يحتوي النظام على ميزة مبتكرة فارقة تميّزه عن الأنظمة الأخرى المشابهة (سواء كان موقعًا أو تطبيقًا).
        • يُفضل أن تكون هذه الميزة مرتبطة بـ "علامة جودة" أو وظيفة حصرية تضيف قيمة واضحة.
        • يجب شرحها من حيث:
        o الهدف منها
        o كيف تعمل داخل النظام
        o أثرها على المستخدم أو سمعة النظام
        o سبب تميزها عن بقية الأنظمة المشابهة
        
        5. **الهدف الوطني:**
        • شرح مختصر لا يتجاوز سطرين فقط.
        • يُولد بناءً على فكرة المشروع الفعلية والمجال المستخدم.
        • يوضّح كيف يدعم المشروع فعليًا التوجه الوطني الذي حدده المستخدم (مثل: دعم التعليم الرقمي، تعزيز نمط الحياة الصحي...).
        • يجب ربطه بـ رؤية المملكة العربية السعودية 2030.
        • يُمنع تثبيت أو نسخ هدف عام لا يعكس الفكرة الفعلية.
        
        6. **شرح الخوارزميات:**
        • شرح علمي مبسط لكل خوارزمية مستخدمة (مثل: Merge Sort، K-Means).
        • توضيح كيف تُستخدم فعليًا داخل النظام.
        • إرفاق مثال تطبيقي لبيان فائدتها.
        
        7. **لغات البرمجة، التقنيات، وخوارزميات الذكاء الاصطناعي:**
        • لكل لغة أو تقنية: شرح لا يتجاوز سطرًا واحدًا يوضح وظيفتها داخل المشروع.
        • في حال تم استخدام الذكاء الاصطناعي:
        o تحديد نوع الذكاء (تحليل، تصنيف، تنبؤ...)
        o ما الذي يتم تحليله أو تصنيفه داخل النظام
        o شرح مبسط لطريقة عمل الخوارزمية
        o مثال تطبيقي يوضح فائدة الخوارزمية
        
        ________________________________________
        📌 القيود الصارمة (يجب الالتزام بها):
        • ✅ توليد نظام متكامل وظيفيًا، لا مجرد فكرة أو أداة جزئية.
        • ✅ الالتزام التام بجميع الأدوات، اللغات، والتقنيات المذكورة فقط.
        • ✅ لا يُسمح بتعديل أو تجاوز أي قيمة صرّح بها المستخدم.
        • ✅ يُسمح باقتراح القيم فقط في حال غيابها.
        • ✅ يُمنع تضمين الذكاء الاصطناعي نهائيًا ما لم يُطلب صراحة.
        • ✅ لكل مستخدم: 5 وظائف على الأقل.
        • ✅ لا يُسمح بتكرار عرض المستخدمين أو وظائفهم.
        • ✅ شرح اللغات لا يتجاوز سطرًا واحدًا.
        • ✅ الهدف الوطني لا يتجاوز سطرين، ويُولّد حسب الفكرة ويرتبط برؤية المملكة 2030.
        • ✅ يجب أن يحتوي المشروع على ميزة فارقة تميز النظام بوضوح عن الأنظمة الأخرى.
        • ✅ عدم وضع اي جمل افتتاحية او جمل ختامية في الرد النهائي
        • ✅ الالتزام بترقيم كل الفقرات والعناوين الرئيسية والعناوين الفرعية والاقسام الداخلية يتم ترقيمها بطريقة منسقة
        • ✅ يرجى تنسيق النص واضافة الايموجز والعناوين الرئيسية والفرعية بشكل منسق ع طريقة Markdown
        • ✅ يجب التاكد ان العناويين الرئيسية بحجم وخط منسقين يظهرون انهم عناويين رئيسية كذلك العناوين الفرعية والترقيم
        * ✅ برجاء عدم وضع جمل افتتاحية او ختامية يجب الالتزام بالتركيز ع توليد الفكرة مباشرة
        * ✅ يجب توليد قواعد البيانات المقترحة و التقنيات المستخدمة اذا كانت هذه القيم فارغة او لم يتم عرضها من المستخدم "technologies": "","database_type": ""
        * ✅ يجب استخدام الفكرة الاولية او initial_idea اللتي ارسلها المستخدم في توليد فكرة المشروع )مهمة جدا(
        _______________________________________
        هذه البيانات اللتي يتم بناءا عليها بناء الفكرة بكل تفاصيلها. الرجاء الالتزام بهذه المعطيات فقط
        ## 📂 البيانات المتوفرة:
        تفاصيل الفكرة :

        نوع الدراسة: {data.get("study_type", "")}
        التخصص: {data.get("specialization", "")}
        المجال: {data.get("field", "")}
        التوجه الوطني: {data.get("national_direction", "")}
        خوارزميات المشروع: {data.get("project_algorithms", "")}
        الفئة المستهدفة: {data.get("target_audience", "")}
        نوع النظام: {data.get("system_type", "")}
        لغات البرمجة: {data.get("programming_languages", "")}
        التقنيات المستخدمة: {data.get("technologies", "")}
        نوع قواعد البيانات: {data.get("database_type", "")}
        نوع البيانات المستخدمة في الذكاء الاصطناعي: {data.get("ai_data_type", "")}
        أنواع الاستخدام للذكاء الاصطناعي: {data.get("ai_use_types", "")}
        الخوارزميات المقترحة للذكاء الاصطناعي: {data.get("ai_algorithms", "")}
        ملاحظات المستخدم أو وصفه الأولي: {data.get("initial_idea", "")}
       
        هذا مثال حي يمكنك الاستفادة منه
        1. **العنوان المقترح:**
        نظام "بيانات بلس" لتحسين جودة قواعد البيانات 🌟
        
        2. **وصف تفصيلي للفكرة مع أمثلة:**
        نظام "بيانات بلس" 📊 هو تطبيق جوال مبتكر صُمم خصيصًا لمعالجة المشكلات الشائعة في جودة قواعد البيانات، مثل التكرار، البيانات غير المتسقة، والأخطاء الإملائية. هذه المشكلات تؤثر سلبًا على موثوقية البيانات وصحة القرارات المتخذة بناءً عليها. يعمل النظام عن طريق استقبال البيانات، معالجتها، ثم تحليلها لاكتشاف هذه المشاكل، وتقديم حلول مقترحة لتحسينها.
        يستطيع محللو البيانات وصناع القرار استخدام النظام لتحليل مجموعات بيانات مختلفة، مثل بيانات العملاء 🧑‍🤝‍🧑 أو المنتجات 🛍️، وتصحيح الأخطاء بشكل فعال لضمان دقة المعلومات.
        مثال 1: يمكن لشركة تجزئة 🏪 استخدام "بيانات بلس" لتنظيف قاعدة بيانات عملائها من الإدخالات المكررة أو غير الدقيقة، مما يتيح لهم استهداف العملاء بشكل أفضل وتحسين حملاتهم التسويقية 📈.
        مثال 2: سيناريو آخر هو استخدامه من قبل مؤسسة مالية 💰 للتحقق من سلامة بيانات المعاملات، وتقليل الأخطاء التي قد تؤدي إلى خسائر مالية أو عدم امتثال للوائح.
        
        3. **المستخدمون ووظائفهم في النظام:**
        **مدير النظام ⚙️:**
        إدارة حسابات المستخدمين (إنشاء، تعديل، حذف).
        مراقبة أداء النظام العام.
        تكوين إعدادات النظام ومعايير جودة البيانات.
        الوصول إلى سجلات النظام وتقارير التدقيق.
        إدارة التراخيص والصلاحيات للمستخدمين.
        
        **محلل البيانات 🔬:**
        تحميل وتنزيل مجموعات البيانات.
        بدء عمليات تحليل جودة البيانات.
        مراجعة تقارير جودة البيانات وتوصيات التصحيح.
        تطبيق التعديلات المقترحة على البيانات.
        جدولة عمليات تحليل البيانات الدورية.
        
        
        4. **مميزات المشروع:**
        معالجة تلقائية للبيانات 🤖: يقوم النظام بمعالجة البيانات بشكل تلقائي فور استقبالها، مما يقلل من التدخل اليدوي ويوفر الوقت والجهد.
        تقارير تفصيلية قابلة للتخصيص 📝: يوفر النظام تقارير شاملة عن جودة البيانات، يمكن تخصيصها لتناسب احتياجات المستخدمين المختلفة، مع إمكانية تصديرها بتنسيقات متعددة.
        إدارة صلاحيات دقيقة 🔑: يدعم النظام نظام صلاحيات متعدد المستويات يضمن وصول كل مستخدم إلى البيانات والوظائف المسموح بها فقط، مما يعزز أمان البيانات.
        تتبع حالة العمليات ⏳: يمكن للمستخدمين تتبع حالة عمليات تحليل ومعالجة البيانات في الوقت الفعلي، وتلقي إشعارات عند اكتمالها أو عند حدوث أخطاء.
        ميزة "علامة الجودة الرقمية" 🏅:
        الهدف منها: تهدف هذه الميزة إلى تزويد المستخدمين (خاصة صناع القرار) بمقياس مرئي وموثوق لجودة مجموعات البيانات التي يتم معالجتها داخل النظام. إنها بمثابة شهادة لجودة البيانات بعد إتمام عمليات التحليل والتصحيح.
        كيف تعمل داخل النظام: بعد اكتمال عملية تحليل وتصحيح مجموعة بيانات معينة، يقوم النظام بتقييم شامل لجودة البيانات بناءً على معايير محددة مسبقًا (مثل نسبة البيانات المكررة، نسبة البيانات المفقودة، مدى التناسق). بناءً على هذا التقييم، يتم منح "علامة جودة رقمية" لمجموعة البيانات، والتي يمكن أن تكون على شكل "ممتاز"، "جيد جدًا"، "مقبول"، أو "ضعيف"، مع عرض تفاصيل النقاط التي تم تقييمها.
        أثرها على المستخدم أو سمعة النظام: تزيد هذه الميزة من ثقة المستخدم في البيانات التي يتعامل معها، حيث يمكنهم الاعتماد على هذه العلامة كمؤشر سريع وموثوق لجودة البيانات. كما تعزز من سمعة النظام كمصدر موثوق به لتحسين جودة البيانات، مما يجذب المزيد من المستخدمين.
        سبب تميزها عن بقية الأنظمة المشابهة: تتميز هذه الميزة بكونها تقدم تقييمًا مرئيًا ومصنفًا لجودة البيانات، بدلاً من مجرد عرض تقارير تفصيلية تتطلب تحليلًا يدويًا. إنها توفر للمستخدم لمحة سريعة وشاملة عن حالة البيانات، وتساهم في بناء ثقة أكبر في النظام كأداة لتحسين جودة البيانات بشكل ملموس.
        
        5. **الهدف الوطني:**
        يدعم المشروع التوجه الوطني المتمثل في تعزيز الاستدامة الرقمية ♻️ عبر تحسين وتطوير قواعد البيانات، مما يسهم في تحقيق ركائز رؤية المملكة العربية السعودية 2030 🇸🇦 المتعلقة ببناء اقتصاد رقمي مزدهر ومجتمع معلوماتي معرفي.
        
        6. **شرح الخوارزميات:**
        تحليل الشكل العام (Pattern Recognition) 🔎:
        شرح علمي مبسط: هي عملية اكتشاف الأنماط أو العلاقات المتكررة في البيانات. تهدف إلى التعرف على تشابهات أو اختلافات ضمن مجموعات كبيرة من البيانات.
        الاستخدام داخل النظام: تُستخدم هذه الخوارزمية في "بيانات بلس" لاكتشاف الأنماط غير المتسقة في البيانات، مثل اختلاف تنسيقات التاريخ أو الأرقام، أو الأخطاء الإملائية الشائعة في الأسماء أو العناوين.
        مثال تطبيقي: إذا كانت قاعدة البيانات تحتوي على أسماء مدن مكتوبة بأكثر من شكل (مثلاً: "الرياض" و "رياض" و "Riyadh")، فإن تحليل الشكل العام سيكتشف هذه التباينات ويقترح توحيدها إلى شكل واحد، مما يحسن من جودة البيانات ويجعلها أكثر قابلية للتحليل.
        شجرة البحث الثنائية (Binary Search Tree - BST) 🌳:
        شرح علمي مبسط: هي هيكل بيانات شجري منظم، حيث تكون قيمة كل عقدة أكبر من جميع قيم العقد في فرعها الأيسر وأقل من جميع قيم العقد في فرعها الأيمن. هذا التنظيم يسهل عمليات البحث، الإضافة، والحذف بكفاءة عالية.
        الاستخدام داخل النظام: تُستخدم شجرة البحث الثنائية في "بيانات بلس" لتحسين كفاءة عمليات البحث عن البيانات المكررة أو المتشابهة. عند تحليل مجموعة بيانات كبيرة، يمكن تخزين العناصر في شجرة بحث ثنائية، مما يجعل عملية التحقق من وجود تكرارات أسرع بكثير.
        مثال تطبيقي: عند تنظيف قائمة بريدية طويلة جدًا من عناوين البريد الإلكتروني المكررة، يمكن إضافة كل عنوان بريد إلكتروني إلى شجرة بحث ثنائية. إذا حاول النظام إضافة عنوان موجود بالفعل، فسيتم اكتشافه بسرعة، مما يوفر وقتًا وجهدًا كبيرًا مقارنة بالبحث الخطي في القائمة بأكملها.
        
        7. **لغات البرمجة، التقنيات، وخوارزميات الذكاء الاصطناعي:**
        **لغات البرمجة 💻:**
        Swift: تُستخدم لتطوير تطبيق الجوال على منصة iOS لتقديم واجهة مستخدم سريعة وفعالة.
        Kotlin: تُستخدم لتطوير تطبيق الجوال على منصة Android لضمان التوافق والأداء الأمثل.
        Python: تُستخدم في الواجهة الخلفية لمعالجة البيانات وتطبيق الخوارزميات، وذلك لغناها بالمكتبات المتخصصة في تحليل البيانات.
       ** التقنيات المستخدمة 🛠️:**
        RESTful APIs: تُستخدم لتمكين الاتصال وتبادل البيانات بين تطبيق الجوال والواجهة الخلفية للنظام بشكل فعال وآمن.
        Docker: تُستخدم لحزم ونشر مكونات النظام كحاويات مستقلة، مما يضمن قابلية النقل وسهولة الإدارة.
        Git: يُستخدم لإدارة إصدارات الكود البرمجي والتعاون بين المطورين بشكل فعال.
       ** نوع قواعد البيانات 🗄️:**
        PostgreSQL: تُستخدم كقاعدة بيانات علائقية قوية وموثوقة لتخزين البيانات المنظمة وإدارة معلومات المستخدمين والعمليات.

        """
      else:
          # 'integration' is missing or empty, but 'allow_suggested_users' is present
        prompt = f"""
         الرجاء توليد نظام متكامل لمشروع تخرج مبتكر، يشمل جميع المكونات الأساسية لأي نظام احترافي مثل:
        • استقبال ومعالجة البيانات
        • تحليل أو تصنيف أو تنفيذ وظائف حسب المجال
        • إدارة العمليات وتتبع حالتها
        • إنشاء تقارير، إشعارات، وصلاحيات متعددة
        • تكامل مع أنظمة خارجية فقط إذا تم تحديد ذلك من قبل المستخدم
        ❗️ إذا كانت بعض الحقول غير محددة من قبل المستخدم، يُسمح للنظام باقتراح قيم مناسبة فقط لهذه الحقول المفقودة، بشرط أن تكون منطقية ومتناسبة مع نوع المشروع والمجال.
        ❌ لا يُسمح بتعديل أو استبدال أي قيمة تم تحديدها من قِبل المستخدم صراحة.
        ❌ لا يُسمح بتضمين أي تقنيات أو خوارزميات أو مفاهيم تتعلق بالذكاء الاصطناعي ما لم يتم طلبها صراحة ضمن بيانات المستخدم.
        ________________________________________
        ✅ تنسيق الرد المطلوب:
        1. **العنوان المقترح:**
        [عنوان واضح ومبتكر للفكرة]
        
        2. **وصف تفصيلي للفكرة مع أمثلة:**
        شرح شامل لطبيعة النظام، المشكلة التي يعالجها، طريقة استخدامه، الجهات المستفيدة، وسيناريوهات تطبيقية حقيقية.
        
        3. **المستخدمون ووظائفهم في النظام:**
        • يجب أن يشمل النظام "مدير النظام".
        • يدعم: تسجيل الدخول، تسجيل الخروج، إنشاء حساب جديد إن لزم.
        • لكل مستخدم: اذكر 5 وظائف واضحة على الأقل.
        o يجب توليد مستخدم واحد على الأقل فعليًا.
        o تحديد صفته، و5 وظائف له.
        • يُمنع ذكر اسماء نهائياً
        • يُمنع تكرار المستخدمين أو وظائفهم في قسم منفصل.
        
        4. **مميزات المشروع (لا تقل عن 5):**
        • مميزات عملية توضح قوة المشروع وجدواه.
        • يجب أن يحتوي النظام على ميزة مبتكرة فارقة تميّزه عن الأنظمة الأخرى المشابهة (سواء كان موقعًا أو تطبيقًا).
        • يُفضل أن تكون هذه الميزة مرتبطة بـ "علامة جودة" أو وظيفة حصرية تضيف قيمة واضحة.
        • يجب شرحها من حيث:
        o الهدف منها
        o كيف تعمل داخل النظام
        o أثرها على المستخدم أو سمعة النظام
        o سبب تميزها عن بقية الأنظمة المشابهة
        
        5. **الهدف الوطني:**
        • شرح مختصر لا يتجاوز سطرين فقط.
        • يُولد بناءً على فكرة المشروع الفعلية والمجال المستخدم.
        • يوضّح كيف يدعم المشروع فعليًا التوجه الوطني الذي حدده المستخدم (مثل: دعم التعليم الرقمي، تعزيز نمط الحياة الصحي...).
        • يجب ربطه بـ رؤية المملكة العربية السعودية 2030.
        • يُمنع تثبيت أو نسخ هدف عام لا يعكس الفكرة الفعلية.
        
        6. **شرح الخوارزميات:**
        • شرح علمي مبسط لكل خوارزمية مستخدمة (مثل: Merge Sort، K-Means).
        • توضيح كيف تُستخدم فعليًا داخل النظام.
        • إرفاق مثال تطبيقي لبيان فائدتها.
        
        7. **لغات البرمجة، التقنيات، وخوارزميات الذكاء الاصطناعي:**
        • لكل لغة أو تقنية: شرح لا يتجاوز سطرًا واحدًا يوضح وظيفتها داخل المشروع.
        • في حال تم استخدام الذكاء الاصطناعي:
        o تحديد نوع الذكاء (تحليل، تصنيف، تنبؤ...)
        o ما الذي يتم تحليله أو تصنيفه داخل النظام
        o شرح مبسط لطريقة عمل الخوارزمية
        o مثال تطبيقي يوضح فائدة الخوارزمية
        
        ________________________________________
        📌 القيود الصارمة (يجب الالتزام بها):
        • ✅ توليد نظام متكامل وظيفيًا، لا مجرد فكرة أو أداة جزئية.
        • ✅ الالتزام التام بجميع الأدوات، اللغات، والتقنيات المذكورة فقط.
        • ✅ لا يُسمح بتعديل أو تجاوز أي قيمة صرّح بها المستخدم.
        • ✅ يُسمح باقتراح القيم فقط في حال غيابها.
        • ✅ يُمنع تضمين الذكاء الاصطناعي نهائيًا ما لم يُطلب صراحة.
        • ✅ لكل مستخدم: 5 وظائف على الأقل.
        • ✅ عند السماح بتوليد مستخدمين إضافيين: يجب توليد مستخدم فعلي مع وظائفه.
        • ✅ لا يُسمح بتكرار عرض المستخدمين أو وظائفهم.
        • ✅ شرح اللغات لا يتجاوز سطرًا واحدًا.
        • ✅ الهدف الوطني لا يتجاوز سطرين، ويُولّد حسب الفكرة ويرتبط برؤية المملكة 2030.
        • ✅ يجب أن يحتوي المشروع على ميزة فارقة تميز النظام بوضوح عن الأنظمة الأخرى.
        • ✅ عدم وضع اي جمل افتتاحية او جمل ختامية في الرد النهائي
        • ✅ الالتزام بترقيم كل الفقرات والعناوين الرئيسية والعناوين الفرعية والاقسام الداخلية يتم ترقيمها بطريقة منسقة
        • ✅ يرجى تنسيق النص واضافة الايموجز والعناوين الرئيسية والفرعية بشكل منسق ع طريقة Markdown
        • ✅ يجب التاكد ان العناويين الرئيسية بحجم وخط منسقين يظهرون انهم عناويين رئيسية كذلك العناوين الفرعية والترقيم
        * ✅ برجاء عدم وضع جمل افتتاحية او ختامية يجب الالتزام بالتركيز ع توليد الفكرة مباشرة
        * ✅ يجب توليد قواعد البيانات المقترحة و التقنيات المستخدمة اذا كانت هذه القيم فارغة او لم يتم عرضها من المستخدم "technologies": "","database_type": ""
        * ✅ يجب استخدام الفكرة الاولية او initial_idea اللتي ارسلها المستخدم في توليد فكرة المشروع )مهمة جدا(
        _______________________________________
        هذه البيانات اللتي يتم بناءا عليها بناء الفكرة بكل تفاصيلها. الرجاء الالتزام بهذه المعطيات فقط
        ## 📂 البيانات المتوفرة:
        تفاصيل الفكرة :

        نوع الدراسة: {data.get("study_type", "")}
        التخصص: {data.get("specialization", "")}
        المجال: {data.get("field", "")}
        التوجه الوطني: {data.get("national_direction", "")}
        خوارزميات المشروع: {data.get("project_algorithms", "")}
        الفئة المستهدفة: {data.get("target_audience", "")}
        نوع النظام: {data.get("system_type", "")}
        لغات البرمجة: {data.get("programming_languages", "")}
        التقنيات المستخدمة: {data.get("technologies", "")}
        نوع قواعد البيانات: {data.get("database_type", "")}
        نوع البيانات المستخدمة في الذكاء الاصطناعي: {data.get("ai_data_type", "")}
        أنواع الاستخدام للذكاء الاصطناعي: {data.get("ai_use_types", "")}
        الخوارزميات المقترحة للذكاء الاصطناعي: {data.get("ai_algorithms", "")}
        ملاحظات المستخدم أو وصفه الأولي: {data.get("initial_idea", "")}
         توليد مستخدمين اخرين غير الفئة المستهدفة المذكورة في نطاق فكرة المشروع : {data.get("allow_suggested_users", "")}

        هذا مثال حي يمكنك الاستفادة منه
        1. **العنوان المقترح:**
        نظام "بيانات بلس" لتحسين جودة قواعد البيانات 🌟
        
        2. **وصف تفصيلي للفكرة مع أمثلة:**
        نظام "بيانات بلس" 📊 هو تطبيق جوال مبتكر صُمم خصيصًا لمعالجة المشكلات الشائعة في جودة قواعد البيانات، مثل التكرار، البيانات غير المتسقة، والأخطاء الإملائية. هذه المشكلات تؤثر سلبًا على موثوقية البيانات وصحة القرارات المتخذة بناءً عليها. يعمل النظام عن طريق استقبال البيانات، معالجتها، ثم تحليلها لاكتشاف هذه المشاكل، وتقديم حلول مقترحة لتحسينها.
        يستطيع محللو البيانات وصناع القرار استخدام النظام لتحليل مجموعات بيانات مختلفة، مثل بيانات العملاء 🧑‍🤝‍🧑 أو المنتجات 🛍️، وتصحيح الأخطاء بشكل فعال لضمان دقة المعلومات.
        مثال 1: يمكن لشركة تجزئة 🏪 استخدام "بيانات بلس" لتنظيف قاعدة بيانات عملائها من الإدخالات المكررة أو غير الدقيقة، مما يتيح لهم استهداف العملاء بشكل أفضل وتحسين حملاتهم التسويقية 📈.
        مثال 2: سيناريو آخر هو استخدامه من قبل مؤسسة مالية 💰 للتحقق من سلامة بيانات المعاملات، وتقليل الأخطاء التي قد تؤدي إلى خسائر مالية أو عدم امتثال للوائح.
        
        3. **المستخدمون ووظائفهم في النظام:**
        **مدير النظام ⚙️:**
        إدارة حسابات المستخدمين (إنشاء، تعديل، حذف).
        مراقبة أداء النظام العام.
        تكوين إعدادات النظام ومعايير جودة البيانات.
        الوصول إلى سجلات النظام وتقارير التدقيق.
        إدارة التراخيص والصلاحيات للمستخدمين.
        
        **محلل البيانات 🔬:**
        تحميل وتنزيل مجموعات البيانات.
        بدء عمليات تحليل جودة البيانات.
        مراجعة تقارير جودة البيانات وتوصيات التصحيح.
        تطبيق التعديلات المقترحة على البيانات.
        جدولة عمليات تحليل البيانات الدورية.
        
        **صانع القرار 🎯:**
        عرض لوحات المعلومات المخصصة لجودة البيانات.
        مراجعة التقارير الموجزة عن سلامة البيانات.
        تقييم تأثير جودة البيانات على مؤشرات الأداء الرئيسية.
        طلب تحليلات إضافية لجودة البيانات.
        تلقي إشعارات حول التغييرات الهامة في جودة البيانات.
        
        4. **مميزات المشروع:**
        معالجة تلقائية للبيانات 🤖: يقوم النظام بمعالجة البيانات بشكل تلقائي فور استقبالها، مما يقلل من التدخل اليدوي ويوفر الوقت والجهد.
        تقارير تفصيلية قابلة للتخصيص 📝: يوفر النظام تقارير شاملة عن جودة البيانات، يمكن تخصيصها لتناسب احتياجات المستخدمين المختلفة، مع إمكانية تصديرها بتنسيقات متعددة.
        إدارة صلاحيات دقيقة 🔑: يدعم النظام نظام صلاحيات متعدد المستويات يضمن وصول كل مستخدم إلى البيانات والوظائف المسموح بها فقط، مما يعزز أمان البيانات.
        تتبع حالة العمليات ⏳: يمكن للمستخدمين تتبع حالة عمليات تحليل ومعالجة البيانات في الوقت الفعلي، وتلقي إشعارات عند اكتمالها أو عند حدوث أخطاء.
        ميزة "علامة الجودة الرقمية" 🏅:
        الهدف منها: تهدف هذه الميزة إلى تزويد المستخدمين (خاصة صناع القرار) بمقياس مرئي وموثوق لجودة مجموعات البيانات التي يتم معالجتها داخل النظام. إنها بمثابة شهادة لجودة البيانات بعد إتمام عمليات التحليل والتصحيح.
        كيف تعمل داخل النظام: بعد اكتمال عملية تحليل وتصحيح مجموعة بيانات معينة، يقوم النظام بتقييم شامل لجودة البيانات بناءً على معايير محددة مسبقًا (مثل نسبة البيانات المكررة، نسبة البيانات المفقودة، مدى التناسق). بناءً على هذا التقييم، يتم منح "علامة جودة رقمية" لمجموعة البيانات، والتي يمكن أن تكون على شكل "ممتاز"، "جيد جدًا"، "مقبول"، أو "ضعيف"، مع عرض تفاصيل النقاط التي تم تقييمها.
        أثرها على المستخدم أو سمعة النظام: تزيد هذه الميزة من ثقة المستخدم في البيانات التي يتعامل معها، حيث يمكنهم الاعتماد على هذه العلامة كمؤشر سريع وموثوق لجودة البيانات. كما تعزز من سمعة النظام كمصدر موثوق به لتحسين جودة البيانات، مما يجذب المزيد من المستخدمين.
        سبب تميزها عن بقية الأنظمة المشابهة: تتميز هذه الميزة بكونها تقدم تقييمًا مرئيًا ومصنفًا لجودة البيانات، بدلاً من مجرد عرض تقارير تفصيلية تتطلب تحليلًا يدويًا. إنها توفر للمستخدم لمحة سريعة وشاملة عن حالة البيانات، وتساهم في بناء ثقة أكبر في النظام كأداة لتحسين جودة البيانات بشكل ملموس.
        
        5. **الهدف الوطني:**
        يدعم المشروع التوجه الوطني المتمثل في تعزيز الاستدامة الرقمية ♻️ عبر تحسين وتطوير قواعد البيانات، مما يسهم في تحقيق ركائز رؤية المملكة العربية السعودية 2030 🇸🇦 المتعلقة ببناء اقتصاد رقمي مزدهر ومجتمع معلوماتي معرفي.
        
        6. **شرح الخوارزميات:**
        تحليل الشكل العام (Pattern Recognition) 🔎:
        شرح علمي مبسط: هي عملية اكتشاف الأنماط أو العلاقات المتكررة في البيانات. تهدف إلى التعرف على تشابهات أو اختلافات ضمن مجموعات كبيرة من البيانات.
        الاستخدام داخل النظام: تُستخدم هذه الخوارزمية في "بيانات بلس" لاكتشاف الأنماط غير المتسقة في البيانات، مثل اختلاف تنسيقات التاريخ أو الأرقام، أو الأخطاء الإملائية الشائعة في الأسماء أو العناوين.
        مثال تطبيقي: إذا كانت قاعدة البيانات تحتوي على أسماء مدن مكتوبة بأكثر من شكل (مثلاً: "الرياض" و "رياض" و "Riyadh")، فإن تحليل الشكل العام سيكتشف هذه التباينات ويقترح توحيدها إلى شكل واحد، مما يحسن من جودة البيانات ويجعلها أكثر قابلية للتحليل.
        شجرة البحث الثنائية (Binary Search Tree - BST) 🌳:
        شرح علمي مبسط: هي هيكل بيانات شجري منظم، حيث تكون قيمة كل عقدة أكبر من جميع قيم العقد في فرعها الأيسر وأقل من جميع قيم العقد في فرعها الأيمن. هذا التنظيم يسهل عمليات البحث، الإضافة، والحذف بكفاءة عالية.
        الاستخدام داخل النظام: تُستخدم شجرة البحث الثنائية في "بيانات بلس" لتحسين كفاءة عمليات البحث عن البيانات المكررة أو المتشابهة. عند تحليل مجموعة بيانات كبيرة، يمكن تخزين العناصر في شجرة بحث ثنائية، مما يجعل عملية التحقق من وجود تكرارات أسرع بكثير.
        مثال تطبيقي: عند تنظيف قائمة بريدية طويلة جدًا من عناوين البريد الإلكتروني المكررة، يمكن إضافة كل عنوان بريد إلكتروني إلى شجرة بحث ثنائية. إذا حاول النظام إضافة عنوان موجود بالفعل، فسيتم اكتشافه بسرعة، مما يوفر وقتًا وجهدًا كبيرًا مقارنة بالبحث الخطي في القائمة بأكملها.
        
        7. **لغات البرمجة، التقنيات، وخوارزميات الذكاء الاصطناعي:**
        **لغات البرمجة 💻:**
        Swift: تُستخدم لتطوير تطبيق الجوال على منصة iOS لتقديم واجهة مستخدم سريعة وفعالة.
        Kotlin: تُستخدم لتطوير تطبيق الجوال على منصة Android لضمان التوافق والأداء الأمثل.
        Python: تُستخدم في الواجهة الخلفية لمعالجة البيانات وتطبيق الخوارزميات، وذلك لغناها بالمكتبات المتخصصة في تحليل البيانات.
       ** التقنيات المستخدمة 🛠️:**
        RESTful APIs: تُستخدم لتمكين الاتصال وتبادل البيانات بين تطبيق الجوال والواجهة الخلفية للنظام بشكل فعال وآمن.
        Docker: تُستخدم لحزم ونشر مكونات النظام كحاويات مستقلة، مما يضمن قابلية النقل وسهولة الإدارة.
        Git: يُستخدم لإدارة إصدارات الكود البرمجي والتعاون بين المطورين بشكل فعال.
       ** نوع قواعد البيانات 🗄️:**
        PostgreSQL: تُستخدم كقاعدة بيانات علائقية قوية وموثوقة لتخزين البيانات المنظمة وإدارة معلومات المستخدمين والعمليات.

        
        """
    else:
      if 'allow_suggested_users' not in data or not data['allow_suggested_users']:
            # 'integration' is present, but 'allow_suggested_users' is missing or empty
            prompt = f"""
         الرجاء توليد نظام متكامل لمشروع تخرج مبتكر، يشمل جميع المكونات الأساسية لأي نظام احترافي مثل:
        • استقبال ومعالجة البيانات
        • تحليل أو تصنيف أو تنفيذ وظائف حسب المجال
        • إدارة العمليات وتتبع حالتها
        • إنشاء تقارير، إشعارات، وصلاحيات متعددة
        • تكامل مع أنظمة خارجية فقط إذا تم تحديد ذلك من قبل المستخدم
        ❗️ إذا كانت بعض الحقول غير محددة من قبل المستخدم، يُسمح للنظام باقتراح قيم مناسبة فقط لهذه الحقول المفقودة، بشرط أن تكون منطقية ومتناسبة مع نوع المشروع والمجال.
        ❌ لا يُسمح بتعديل أو استبدال أي قيمة تم تحديدها من قِبل المستخدم صراحة.
        ❌ لا يُسمح بتضمين أي تقنيات أو خوارزميات أو مفاهيم تتعلق بالذكاء الاصطناعي ما لم يتم طلبها صراحة ضمن بيانات المستخدم.
        ________________________________________
        ✅ تنسيق الرد المطلوب:
        1. **العنوان المقترح:**
        [عنوان واضح ومبتكر للفكرة]
        
        2. **وصف تفصيلي للفكرة مع أمثلة:**
        شرح شامل لطبيعة النظام، المشكلة التي يعالجها، طريقة استخدامه، الجهات المستفيدة، وسيناريوهات تطبيقية حقيقية.
        
        3. **المستخدمون ووظائفهم في النظام:**
        • يجب أن يشمل النظام "مدير النظام".
        • يدعم: تسجيل الدخول، تسجيل الخروج، إنشاء حساب جديد إن لزم.
        • لكل مستخدم: اذكر 5 وظائف واضحة على الأقل.
        o تحديد صفته، و5 وظائف له.
        • يُمنع ذكر اسماء نهائياً
        • يُمنع تكرار المستخدمين أو وظائفهم في قسم منفصل.
        
        4. **مميزات المشروع (لا تقل عن 5):**
        • مميزات عملية توضح قوة المشروع وجدواه.
        • يجب أن يحتوي النظام على ميزة مبتكرة فارقة تميّزه عن الأنظمة الأخرى المشابهة (سواء كان موقعًا أو تطبيقًا).
        • يُفضل أن تكون هذه الميزة مرتبطة بـ "علامة جودة" أو وظيفة حصرية تضيف قيمة واضحة.
        • يجب شرحها من حيث:
        o الهدف منها
        o كيف تعمل داخل النظام
        o أثرها على المستخدم أو سمعة النظام
        o سبب تميزها عن بقية الأنظمة المشابهة
        
        5. **الهدف الوطني:**
        • شرح مختصر لا يتجاوز سطرين فقط.
        • يُولد بناءً على فكرة المشروع الفعلية والمجال المستخدم.
        • يوضّح كيف يدعم المشروع فعليًا التوجه الوطني الذي حدده المستخدم (مثل: دعم التعليم الرقمي، تعزيز نمط الحياة الصحي...).
        • يجب ربطه بـ رؤية المملكة العربية السعودية 2030.
        • يُمنع تثبيت أو نسخ هدف عام لا يعكس الفكرة الفعلية.
        
        6. **شرح الخوارزميات:**
        • شرح علمي مبسط لكل خوارزمية مستخدمة (مثل: Merge Sort، K-Means).
        • توضيح كيف تُستخدم فعليًا داخل النظام.
        • إرفاق مثال تطبيقي لبيان فائدتها.
        
        7. **لغات البرمجة، التقنيات، وخوارزميات الذكاء الاصطناعي:**
        • لكل لغة أو تقنية: شرح لا يتجاوز سطرًا واحدًا يوضح وظيفتها داخل المشروع.
        • في حال تم استخدام الذكاء الاصطناعي:
        o تحديد نوع الذكاء (تحليل، تصنيف، تنبؤ...)
        o ما الذي يتم تحليله أو تصنيفه داخل النظام
        o شرح مبسط لطريقة عمل الخوارزمية
        o مثال تطبيقي يوضح فائدة الخوارزمية
        
        8. **التكامل مع الأنظمة الأخرى:**
        • إذا لم يتم تحديد نوع التكامل من قبل المستخدم، يُتجاهل هذا القسم تمامًا.
        • إذا تم تحديد نوع التكامل (مثل: API خارجي، ذكاء اصطناعي...):
        o شرح وظيفة التكامل عمليًا (مثل: تبادل بيانات، مزامنة حسابات، استخدام نماذج خارجية).
        o تحديد مكان حدوث التكامل داخل النظام.
        o شرح القيمة المضافة من هذا التكامل.
        ________________________________________
        📌 القيود الصارمة (يجب الالتزام بها):
        • ✅ توليد نظام متكامل وظيفيًا، لا مجرد فكرة أو أداة جزئية.
        • ✅ الالتزام التام بجميع الأدوات، اللغات، والتقنيات المذكورة فقط.
        • ✅ لا يُسمح بتعديل أو تجاوز أي قيمة صرّح بها المستخدم.
        • ✅ يُسمح باقتراح القيم فقط في حال غيابها.
        • ✅ يُمنع تضمين الذكاء الاصطناعي نهائيًا ما لم يُطلب صراحة.
        • ✅ لكل مستخدم: 5 وظائف على الأقل.
        • ✅ عند السماح بتوليد مستخدمين إضافيين: يجب توليد مستخدم فعلي مع وظائفه.
        • ✅ لا يُسمح بتكرار عرض المستخدمين أو وظائفهم.
        • ✅ شرح اللغات لا يتجاوز سطرًا واحدًا.
        • ✅ الهدف الوطني لا يتجاوز سطرين، ويُولّد حسب الفكرة ويرتبط برؤية المملكة 2030.
        • ✅ يجب أن يحتوي المشروع على ميزة فارقة تميز النظام بوضوح عن الأنظمة الأخرى.
        • ✅ عدم وضع اي جمل افتتاحية او جمل ختامية في الرد النهائي
        • ✅ الالتزام بترقيم كل الفقرات والعناوين الرئيسية والعناوين الفرعية والاقسام الداخلية يتم ترقيمها بطريقة منسقة
        • ✅ في حالة ان المتغير integration فارغ او لم يتم ارساله يتم حذف الفقرة رقم 8 من الاجابة نهائيا وهي التكامل مع الانظمة الاخرى وعدم ذكرها
        • ✅ يرجى تنسيق النص واضافة الايموجز والعناوين الرئيسية والفرعية بشكل منسق ع طريقة Markdown
        • ✅ يجب التاكد ان العناويين الرئيسية بحجم وخط منسقين يظهرون انهم عناويين رئيسية كذلك العناوين الفرعية والترقيم
        * ✅ هذا مثال توضيحي للشكل النهائي للرد المنتظر منك مع العلم ان فقرة 8 التكامل مع الانظمة الاخرى يتم اضافتها اذا تم ذكر ذلك ويتم حذفها اذا كانت قيمة integration فارغة او غير موجودة
        * ✅ برجاء عدم وضع جمل افتتاحية او ختامية يجب الالتزام بالتركيز ع توليد الفكرة مباشرة
        * ✅ يجب توليد قواعد البيانات المقترحة و التقنيات المستخدمة اذا كانت هذه القيم فارغة او لم يتم عرضها من المستخدم "technologies": "","database_type": ""
        * ✅ يجب استخدام الفكرة الاولية او initial_idea اللتي ارسلها المستخدم في توليد فكرة المشروع )مهمة جدا(
        _______________________________________
        هذه البيانات اللتي يتم بناءا عليها بناء الفكرة بكل تفاصيلها. الرجاء الالتزام بهذه المعطيات فقط
        ## 📂 البيانات المتوفرة:
        تفاصيل الفكرة :

        نوع الدراسة: {data.get("study_type", "")}
        التخصص: {data.get("specialization", "")}
        المجال: {data.get("field", "")}
        التوجه الوطني: {data.get("national_direction", "")}
        خوارزميات المشروع: {data.get("project_algorithms", "")}
        الفئة المستهدفة: {data.get("target_audience", "")}
        نوع النظام: {data.get("system_type", "")}
        التكامل مع أنظمة أخرى: {data.get("integration", "")}
        لغات البرمجة: {data.get("programming_languages", "")}
        التقنيات المستخدمة: {data.get("technologies", "")}
        نوع قواعد البيانات: {data.get("database_type", "")}
        نوع البيانات المستخدمة في الذكاء الاصطناعي: {data.get("ai_data_type", "")}
        أنواع الاستخدام للذكاء الاصطناعي: {data.get("ai_use_types", "")}
        الخوارزميات المقترحة للذكاء الاصطناعي: {data.get("ai_algorithms", "")}
        ملاحظات المستخدم أو وصفه الأولي: {data.get("initial_idea", "")}

        هذا مثال حي يمكنك الاستفادة منه
        1. **العنوان المقترح:**
        نظام "بيانات بلس" لتحسين جودة قواعد البيانات 🌟
        
        2. **وصف تفصيلي للفكرة مع أمثلة:**
        نظام "بيانات بلس" 📊 هو تطبيق جوال مبتكر صُمم خصيصًا لمعالجة المشكلات الشائعة في جودة قواعد البيانات، مثل التكرار، البيانات غير المتسقة، والأخطاء الإملائية. هذه المشكلات تؤثر سلبًا على موثوقية البيانات وصحة القرارات المتخذة بناءً عليها. يعمل النظام عن طريق استقبال البيانات، معالجتها، ثم تحليلها لاكتشاف هذه المشاكل، وتقديم حلول مقترحة لتحسينها.
        يستطيع محللو البيانات وصناع القرار استخدام النظام لتحليل مجموعات بيانات مختلفة، مثل بيانات العملاء 🧑‍🤝‍🧑 أو المنتجات 🛍️، وتصحيح الأخطاء بشكل فعال لضمان دقة المعلومات.
        مثال 1: يمكن لشركة تجزئة 🏪 استخدام "بيانات بلس" لتنظيف قاعدة بيانات عملائها من الإدخالات المكررة أو غير الدقيقة، مما يتيح لهم استهداف العملاء بشكل أفضل وتحسين حملاتهم التسويقية 📈.
        مثال 2: سيناريو آخر هو استخدامه من قبل مؤسسة مالية 💰 للتحقق من سلامة بيانات المعاملات، وتقليل الأخطاء التي قد تؤدي إلى خسائر مالية أو عدم امتثال للوائح.
        
        3. **المستخدمون ووظائفهم في النظام:**
        **مدير النظام ⚙️:**
        إدارة حسابات المستخدمين (إنشاء، تعديل، حذف).
        مراقبة أداء النظام العام.
        تكوين إعدادات النظام ومعايير جودة البيانات.
        الوصول إلى سجلات النظام وتقارير التدقيق.
        إدارة التراخيص والصلاحيات للمستخدمين.
        
        **محلل البيانات 🔬:**
        تحميل وتنزيل مجموعات البيانات.
        بدء عمليات تحليل جودة البيانات.
        مراجعة تقارير جودة البيانات وتوصيات التصحيح.
        تطبيق التعديلات المقترحة على البيانات.
        جدولة عمليات تحليل البيانات الدورية.
        
        **صانع القرار 🎯:**
        عرض لوحات المعلومات المخصصة لجودة البيانات.
        مراجعة التقارير الموجزة عن سلامة البيانات.
        تقييم تأثير جودة البيانات على مؤشرات الأداء الرئيسية.
        طلب تحليلات إضافية لجودة البيانات.
        تلقي إشعارات حول التغييرات الهامة في جودة البيانات.
        
        4. **مميزات المشروع:**
        معالجة تلقائية للبيانات 🤖: يقوم النظام بمعالجة البيانات بشكل تلقائي فور استقبالها، مما يقلل من التدخل اليدوي ويوفر الوقت والجهد.
        تقارير تفصيلية قابلة للتخصيص 📝: يوفر النظام تقارير شاملة عن جودة البيانات، يمكن تخصيصها لتناسب احتياجات المستخدمين المختلفة، مع إمكانية تصديرها بتنسيقات متعددة.
        إدارة صلاحيات دقيقة 🔑: يدعم النظام نظام صلاحيات متعدد المستويات يضمن وصول كل مستخدم إلى البيانات والوظائف المسموح بها فقط، مما يعزز أمان البيانات.
        تتبع حالة العمليات ⏳: يمكن للمستخدمين تتبع حالة عمليات تحليل ومعالجة البيانات في الوقت الفعلي، وتلقي إشعارات عند اكتمالها أو عند حدوث أخطاء.
        ميزة "علامة الجودة الرقمية" 🏅:
        الهدف منها: تهدف هذه الميزة إلى تزويد المستخدمين (خاصة صناع القرار) بمقياس مرئي وموثوق لجودة مجموعات البيانات التي يتم معالجتها داخل النظام. إنها بمثابة شهادة لجودة البيانات بعد إتمام عمليات التحليل والتصحيح.
        كيف تعمل داخل النظام: بعد اكتمال عملية تحليل وتصحيح مجموعة بيانات معينة، يقوم النظام بتقييم شامل لجودة البيانات بناءً على معايير محددة مسبقًا (مثل نسبة البيانات المكررة، نسبة البيانات المفقودة، مدى التناسق). بناءً على هذا التقييم، يتم منح "علامة جودة رقمية" لمجموعة البيانات، والتي يمكن أن تكون على شكل "ممتاز"، "جيد جدًا"، "مقبول"، أو "ضعيف"، مع عرض تفاصيل النقاط التي تم تقييمها.
        أثرها على المستخدم أو سمعة النظام: تزيد هذه الميزة من ثقة المستخدم في البيانات التي يتعامل معها، حيث يمكنهم الاعتماد على هذه العلامة كمؤشر سريع وموثوق لجودة البيانات. كما تعزز من سمعة النظام كمصدر موثوق به لتحسين جودة البيانات، مما يجذب المزيد من المستخدمين.
        سبب تميزها عن بقية الأنظمة المشابهة: تتميز هذه الميزة بكونها تقدم تقييمًا مرئيًا ومصنفًا لجودة البيانات، بدلاً من مجرد عرض تقارير تفصيلية تتطلب تحليلًا يدويًا. إنها توفر للمستخدم لمحة سريعة وشاملة عن حالة البيانات، وتساهم في بناء ثقة أكبر في النظام كأداة لتحسين جودة البيانات بشكل ملموس.
        
        5. **الهدف الوطني:**
        يدعم المشروع التوجه الوطني المتمثل في تعزيز الاستدامة الرقمية ♻️ عبر تحسين وتطوير قواعد البيانات، مما يسهم في تحقيق ركائز رؤية المملكة العربية السعودية 2030 🇸🇦 المتعلقة ببناء اقتصاد رقمي مزدهر ومجتمع معلوماتي معرفي.
        
        6. **شرح الخوارزميات:**
        تحليل الشكل العام (Pattern Recognition) 🔎:
        شرح علمي مبسط: هي عملية اكتشاف الأنماط أو العلاقات المتكررة في البيانات. تهدف إلى التعرف على تشابهات أو اختلافات ضمن مجموعات كبيرة من البيانات.
        الاستخدام داخل النظام: تُستخدم هذه الخوارزمية في "بيانات بلس" لاكتشاف الأنماط غير المتسقة في البيانات، مثل اختلاف تنسيقات التاريخ أو الأرقام، أو الأخطاء الإملائية الشائعة في الأسماء أو العناوين.
        مثال تطبيقي: إذا كانت قاعدة البيانات تحتوي على أسماء مدن مكتوبة بأكثر من شكل (مثلاً: "الرياض" و "رياض" و "Riyadh")، فإن تحليل الشكل العام سيكتشف هذه التباينات ويقترح توحيدها إلى شكل واحد، مما يحسن من جودة البيانات ويجعلها أكثر قابلية للتحليل.
        شجرة البحث الثنائية (Binary Search Tree - BST) 🌳:
        شرح علمي مبسط: هي هيكل بيانات شجري منظم، حيث تكون قيمة كل عقدة أكبر من جميع قيم العقد في فرعها الأيسر وأقل من جميع قيم العقد في فرعها الأيمن. هذا التنظيم يسهل عمليات البحث، الإضافة، والحذف بكفاءة عالية.
        الاستخدام داخل النظام: تُستخدم شجرة البحث الثنائية في "بيانات بلس" لتحسين كفاءة عمليات البحث عن البيانات المكررة أو المتشابهة. عند تحليل مجموعة بيانات كبيرة، يمكن تخزين العناصر في شجرة بحث ثنائية، مما يجعل عملية التحقق من وجود تكرارات أسرع بكثير.
        مثال تطبيقي: عند تنظيف قائمة بريدية طويلة جدًا من عناوين البريد الإلكتروني المكررة، يمكن إضافة كل عنوان بريد إلكتروني إلى شجرة بحث ثنائية. إذا حاول النظام إضافة عنوان موجود بالفعل، فسيتم اكتشافه بسرعة، مما يوفر وقتًا وجهدًا كبيرًا مقارنة بالبحث الخطي في القائمة بأكملها.
        
        7. **لغات البرمجة، التقنيات، وخوارزميات الذكاء الاصطناعي:**
        **لغات البرمجة 💻:**
        Swift: تُستخدم لتطوير تطبيق الجوال على منصة iOS لتقديم واجهة مستخدم سريعة وفعالة.
        Kotlin: تُستخدم لتطوير تطبيق الجوال على منصة Android لضمان التوافق والأداء الأمثل.
        Python: تُستخدم في الواجهة الخلفية لمعالجة البيانات وتطبيق الخوارزميات، وذلك لغناها بالمكتبات المتخصصة في تحليل البيانات.
       ** التقنيات المستخدمة 🛠️:**
        RESTful APIs: تُستخدم لتمكين الاتصال وتبادل البيانات بين تطبيق الجوال والواجهة الخلفية للنظام بشكل فعال وآمن.
        Docker: تُستخدم لحزم ونشر مكونات النظام كحاويات مستقلة، مما يضمن قابلية النقل وسهولة الإدارة.
        Git: يُستخدم لإدارة إصدارات الكود البرمجي والتعاون بين المطورين بشكل فعال.
       ** نوع قواعد البيانات 🗄️:**
        PostgreSQL: تُستخدم كقاعدة بيانات علائقية قوية وموثوقة لتخزين البيانات المنظمة وإدارة معلومات المستخدمين والعمليات.

        8. **التكامل مع الأنظمة الأخرى:**
        • إذا لم يتم تحديد نوع التكامل من قبل المستخدم، يُتجاهل هذا القسم تمامًا.
        • إذا تم تحديد نوع التكامل (مثل: API خارجي، ذكاء اصطناعي...):
        o شرح وظيفة التكامل عمليًا (مثل: تبادل بيانات، مزامنة حسابات، استخدام نماذج خارجية).
        o تحديد مكان حدوث التكامل داخل النظام.
        o شرح القيمة المضافة من هذا التكامل.

        """
      else:
        # Both 'integration' and 'allow_suggested_users' are present    
        prompt = f"""
         الرجاء توليد نظام متكامل لمشروع تخرج مبتكر، يشمل جميع المكونات الأساسية لأي نظام احترافي مثل:
        • استقبال ومعالجة البيانات
        • تحليل أو تصنيف أو تنفيذ وظائف حسب المجال
        • إدارة العمليات وتتبع حالتها
        • إنشاء تقارير، إشعارات، وصلاحيات متعددة
        • تكامل مع أنظمة خارجية فقط إذا تم تحديد ذلك من قبل المستخدم
        ❗️ إذا كانت بعض الحقول غير محددة من قبل المستخدم، يُسمح للنظام باقتراح قيم مناسبة فقط لهذه الحقول المفقودة، بشرط أن تكون منطقية ومتناسبة مع نوع المشروع والمجال.
        ❌ لا يُسمح بتعديل أو استبدال أي قيمة تم تحديدها من قِبل المستخدم صراحة.
        ❌ لا يُسمح بتضمين أي تقنيات أو خوارزميات أو مفاهيم تتعلق بالذكاء الاصطناعي ما لم يتم طلبها صراحة ضمن بيانات المستخدم.
        ________________________________________
        ✅ تنسيق الرد المطلوب:
        1. **العنوان المقترح:**
        [عنوان واضح ومبتكر للفكرة]
        
        2. **وصف تفصيلي للفكرة مع أمثلة:**
        شرح شامل لطبيعة النظام، المشكلة التي يعالجها، طريقة استخدامه، الجهات المستفيدة، وسيناريوهات تطبيقية حقيقية.
        
        3. **المستخدمون ووظائفهم في النظام:**
        • يجب أن يشمل النظام "مدير النظام".
        • يدعم: تسجيل الدخول، تسجيل الخروج، إنشاء حساب جديد إن لزم.
        • لكل مستخدم: اذكر 5 وظائف واضحة على الأقل.
        o يجب توليد مستخدم واحد على الأقل فعليًا.
        o تحديد صفته، و5 وظائف له.
        • يُمنع ذكر اسماء نهائياً
        • يُمنع تكرار المستخدمين أو وظائفهم في قسم منفصل.
        
        4. **مميزات المشروع (لا تقل عن 5):**
        • مميزات عملية توضح قوة المشروع وجدواه.
        • يجب أن يحتوي النظام على ميزة مبتكرة فارقة تميّزه عن الأنظمة الأخرى المشابهة (سواء كان موقعًا أو تطبيقًا).
        • يُفضل أن تكون هذه الميزة مرتبطة بـ "علامة جودة" أو وظيفة حصرية تضيف قيمة واضحة.
        • يجب شرحها من حيث:
        o الهدف منها
        o كيف تعمل داخل النظام
        o أثرها على المستخدم أو سمعة النظام
        o سبب تميزها عن بقية الأنظمة المشابهة
        
        5. **الهدف الوطني:**
        • شرح مختصر لا يتجاوز سطرين فقط.
        • يُولد بناءً على فكرة المشروع الفعلية والمجال المستخدم.
        • يوضّح كيف يدعم المشروع فعليًا التوجه الوطني الذي حدده المستخدم (مثل: دعم التعليم الرقمي، تعزيز نمط الحياة الصحي...).
        • يجب ربطه بـ رؤية المملكة العربية السعودية 2030.
        • يُمنع تثبيت أو نسخ هدف عام لا يعكس الفكرة الفعلية.
        
        6. **شرح الخوارزميات:**
        • شرح علمي مبسط لكل خوارزمية مستخدمة (مثل: Merge Sort، K-Means).
        • توضيح كيف تُستخدم فعليًا داخل النظام.
        • إرفاق مثال تطبيقي لبيان فائدتها.
        
        7. **لغات البرمجة، التقنيات، وخوارزميات الذكاء الاصطناعي:**
        • لكل لغة أو تقنية: شرح لا يتجاوز سطرًا واحدًا يوضح وظيفتها داخل المشروع.
        • في حال تم استخدام الذكاء الاصطناعي:
        o تحديد نوع الذكاء (تحليل، تصنيف، تنبؤ...)
        o ما الذي يتم تحليله أو تصنيفه داخل النظام
        o شرح مبسط لطريقة عمل الخوارزمية
        o مثال تطبيقي يوضح فائدة الخوارزمية
        
        8. **التكامل مع الأنظمة الأخرى:**
        • إذا لم يتم تحديد نوع التكامل من قبل المستخدم، يُتجاهل هذا القسم تمامًا.
        • إذا تم تحديد نوع التكامل (مثل: API خارجي، ذكاء اصطناعي...):
        o شرح وظيفة التكامل عمليًا (مثل: تبادل بيانات، مزامنة حسابات، استخدام نماذج خارجية).
        o تحديد مكان حدوث التكامل داخل النظام.
        o شرح القيمة المضافة من هذا التكامل.
        ________________________________________
        📌 القيود الصارمة (يجب الالتزام بها):
        • ✅ توليد نظام متكامل وظيفيًا، لا مجرد فكرة أو أداة جزئية.
        • ✅ الالتزام التام بجميع الأدوات، اللغات، والتقنيات المذكورة فقط.
        • ✅ لا يُسمح بتعديل أو تجاوز أي قيمة صرّح بها المستخدم.
        • ✅ يُسمح باقتراح القيم فقط في حال غيابها.
        • ✅ يُمنع تضمين الذكاء الاصطناعي نهائيًا ما لم يُطلب صراحة.
        • ✅ لكل مستخدم: 5 وظائف على الأقل.
        • ✅ عند السماح بتوليد مستخدمين إضافيين: يجب توليد مستخدم فعلي مع وظائفه.
        • ✅ لا يُسمح بتكرار عرض المستخدمين أو وظائفهم.
        • ✅ شرح اللغات لا يتجاوز سطرًا واحدًا.
        • ✅ الهدف الوطني لا يتجاوز سطرين، ويُولّد حسب الفكرة ويرتبط برؤية المملكة 2030.
        • ✅ يجب أن يحتوي المشروع على ميزة فارقة تميز النظام بوضوح عن الأنظمة الأخرى.
        • ✅ عدم وضع اي جمل افتتاحية او جمل ختامية في الرد النهائي
        • ✅ الالتزام بترقيم كل الفقرات والعناوين الرئيسية والعناوين الفرعية والاقسام الداخلية يتم ترقيمها بطريقة منسقة
        • ✅ في حالة ان المتغير integration فارغ او لم يتم ارساله يتم حذف الفقرة رقم 8 من الاجابة نهائيا وهي التكامل مع الانظمة الاخرى وعدم ذكرها
        • ✅ يرجى تنسيق النص واضافة الايموجز والعناوين الرئيسية والفرعية بشكل منسق ع طريقة Markdown
        • ✅ يجب التاكد ان العناويين الرئيسية بحجم وخط منسقين يظهرون انهم عناويين رئيسية كذلك العناوين الفرعية والترقيم
        * ✅ هذا مثال توضيحي للشكل النهائي للرد المنتظر منك مع العلم ان فقرة 8 التكامل مع الانظمة الاخرى يتم اضافتها اذا تم ذكر ذلك ويتم حذفها اذا كانت قيمة integration فارغة او غير موجودة
        * ✅ برجاء عدم وضع جمل افتتاحية او ختامية يجب الالتزام بالتركيز ع توليد الفكرة مباشرة
        * ✅ يجب توليد قواعد البيانات المقترحة و التقنيات المستخدمة اذا كانت هذه القيم فارغة او لم يتم عرضها من المستخدم "technologies": "","database_type": ""
        * ✅ يجب استخدام الفكرة الاولية او initial_idea اللتي ارسلها المستخدم في توليد فكرة المشروع )مهمة جدا(
        _______________________________________
        هذه البيانات اللتي يتم بناءا عليها بناء الفكرة بكل تفاصيلها. الرجاء الالتزام بهذه المعطيات فقط
        ## 📂 البيانات المتوفرة:
        تفاصيل الفكرة :

        نوع الدراسة: {data.get("study_type", "")}
        التخصص: {data.get("specialization", "")}
        المجال: {data.get("field", "")}
        التوجه الوطني: {data.get("national_direction", "")}
        خوارزميات المشروع: {data.get("project_algorithms", "")}
        الفئة المستهدفة: {data.get("target_audience", "")}
        نوع النظام: {data.get("system_type", "")}
        التكامل مع أنظمة أخرى: {data.get("integration", "")}
        لغات البرمجة: {data.get("programming_languages", "")}
        التقنيات المستخدمة: {data.get("technologies", "")}
        نوع قواعد البيانات: {data.get("database_type", "")}
        نوع البيانات المستخدمة في الذكاء الاصطناعي: {data.get("ai_data_type", "")}
        أنواع الاستخدام للذكاء الاصطناعي: {data.get("ai_use_types", "")}
        الخوارزميات المقترحة للذكاء الاصطناعي: {data.get("ai_algorithms", "")}
        ملاحظات المستخدم أو وصفه الأولي: {data.get("initial_idea", "")}
        توليد مستخدمين اخرين غير الفئة المستهدفة المذكورة في نطاق فكرة المشروع : {data.get("allow_suggested_users", "")}

        هذا مثال حي يمكنك الاستفادة منه
        1. **العنوان المقترح:**
        نظام "بيانات بلس" لتحسين جودة قواعد البيانات 🌟
        
        2. **وصف تفصيلي للفكرة مع أمثلة:**
        نظام "بيانات بلس" 📊 هو تطبيق جوال مبتكر صُمم خصيصًا لمعالجة المشكلات الشائعة في جودة قواعد البيانات، مثل التكرار، البيانات غير المتسقة، والأخطاء الإملائية. هذه المشكلات تؤثر سلبًا على موثوقية البيانات وصحة القرارات المتخذة بناءً عليها. يعمل النظام عن طريق استقبال البيانات، معالجتها، ثم تحليلها لاكتشاف هذه المشاكل، وتقديم حلول مقترحة لتحسينها.
        يستطيع محللو البيانات وصناع القرار استخدام النظام لتحليل مجموعات بيانات مختلفة، مثل بيانات العملاء 🧑‍🤝‍🧑 أو المنتجات 🛍️، وتصحيح الأخطاء بشكل فعال لضمان دقة المعلومات.
        مثال 1: يمكن لشركة تجزئة 🏪 استخدام "بيانات بلس" لتنظيف قاعدة بيانات عملائها من الإدخالات المكررة أو غير الدقيقة، مما يتيح لهم استهداف العملاء بشكل أفضل وتحسين حملاتهم التسويقية 📈.
        مثال 2: سيناريو آخر هو استخدامه من قبل مؤسسة مالية 💰 للتحقق من سلامة بيانات المعاملات، وتقليل الأخطاء التي قد تؤدي إلى خسائر مالية أو عدم امتثال للوائح.
        
        3. **المستخدمون ووظائفهم في النظام:**
        **مدير النظام ⚙️:**
        إدارة حسابات المستخدمين (إنشاء، تعديل، حذف).
        مراقبة أداء النظام العام.
        تكوين إعدادات النظام ومعايير جودة البيانات.
        الوصول إلى سجلات النظام وتقارير التدقيق.
        إدارة التراخيص والصلاحيات للمستخدمين.
        
        **محلل البيانات 🔬:**
        تحميل وتنزيل مجموعات البيانات.
        بدء عمليات تحليل جودة البيانات.
        مراجعة تقارير جودة البيانات وتوصيات التصحيح.
        تطبيق التعديلات المقترحة على البيانات.
        جدولة عمليات تحليل البيانات الدورية.
        
        **صانع القرار 🎯:**
        عرض لوحات المعلومات المخصصة لجودة البيانات.
        مراجعة التقارير الموجزة عن سلامة البيانات.
        تقييم تأثير جودة البيانات على مؤشرات الأداء الرئيسية.
        طلب تحليلات إضافية لجودة البيانات.
        تلقي إشعارات حول التغييرات الهامة في جودة البيانات.
        
        4. **مميزات المشروع:**
        معالجة تلقائية للبيانات 🤖: يقوم النظام بمعالجة البيانات بشكل تلقائي فور استقبالها، مما يقلل من التدخل اليدوي ويوفر الوقت والجهد.
        تقارير تفصيلية قابلة للتخصيص 📝: يوفر النظام تقارير شاملة عن جودة البيانات، يمكن تخصيصها لتناسب احتياجات المستخدمين المختلفة، مع إمكانية تصديرها بتنسيقات متعددة.
        إدارة صلاحيات دقيقة 🔑: يدعم النظام نظام صلاحيات متعدد المستويات يضمن وصول كل مستخدم إلى البيانات والوظائف المسموح بها فقط، مما يعزز أمان البيانات.
        تتبع حالة العمليات ⏳: يمكن للمستخدمين تتبع حالة عمليات تحليل ومعالجة البيانات في الوقت الفعلي، وتلقي إشعارات عند اكتمالها أو عند حدوث أخطاء.
        ميزة "علامة الجودة الرقمية" 🏅:
        الهدف منها: تهدف هذه الميزة إلى تزويد المستخدمين (خاصة صناع القرار) بمقياس مرئي وموثوق لجودة مجموعات البيانات التي يتم معالجتها داخل النظام. إنها بمثابة شهادة لجودة البيانات بعد إتمام عمليات التحليل والتصحيح.
        كيف تعمل داخل النظام: بعد اكتمال عملية تحليل وتصحيح مجموعة بيانات معينة، يقوم النظام بتقييم شامل لجودة البيانات بناءً على معايير محددة مسبقًا (مثل نسبة البيانات المكررة، نسبة البيانات المفقودة، مدى التناسق). بناءً على هذا التقييم، يتم منح "علامة جودة رقمية" لمجموعة البيانات، والتي يمكن أن تكون على شكل "ممتاز"، "جيد جدًا"، "مقبول"، أو "ضعيف"، مع عرض تفاصيل النقاط التي تم تقييمها.
        أثرها على المستخدم أو سمعة النظام: تزيد هذه الميزة من ثقة المستخدم في البيانات التي يتعامل معها، حيث يمكنهم الاعتماد على هذه العلامة كمؤشر سريع وموثوق لجودة البيانات. كما تعزز من سمعة النظام كمصدر موثوق به لتحسين جودة البيانات، مما يجذب المزيد من المستخدمين.
        سبب تميزها عن بقية الأنظمة المشابهة: تتميز هذه الميزة بكونها تقدم تقييمًا مرئيًا ومصنفًا لجودة البيانات، بدلاً من مجرد عرض تقارير تفصيلية تتطلب تحليلًا يدويًا. إنها توفر للمستخدم لمحة سريعة وشاملة عن حالة البيانات، وتساهم في بناء ثقة أكبر في النظام كأداة لتحسين جودة البيانات بشكل ملموس.
        
        5. **الهدف الوطني:**
        يدعم المشروع التوجه الوطني المتمثل في تعزيز الاستدامة الرقمية ♻️ عبر تحسين وتطوير قواعد البيانات، مما يسهم في تحقيق ركائز رؤية المملكة العربية السعودية 2030 🇸🇦 المتعلقة ببناء اقتصاد رقمي مزدهر ومجتمع معلوماتي معرفي.
        
        6. **شرح الخوارزميات:**
        تحليل الشكل العام (Pattern Recognition) 🔎:
        شرح علمي مبسط: هي عملية اكتشاف الأنماط أو العلاقات المتكررة في البيانات. تهدف إلى التعرف على تشابهات أو اختلافات ضمن مجموعات كبيرة من البيانات.
        الاستخدام داخل النظام: تُستخدم هذه الخوارزمية في "بيانات بلس" لاكتشاف الأنماط غير المتسقة في البيانات، مثل اختلاف تنسيقات التاريخ أو الأرقام، أو الأخطاء الإملائية الشائعة في الأسماء أو العناوين.
        مثال تطبيقي: إذا كانت قاعدة البيانات تحتوي على أسماء مدن مكتوبة بأكثر من شكل (مثلاً: "الرياض" و "رياض" و "Riyadh")، فإن تحليل الشكل العام سيكتشف هذه التباينات ويقترح توحيدها إلى شكل واحد، مما يحسن من جودة البيانات ويجعلها أكثر قابلية للتحليل.
        شجرة البحث الثنائية (Binary Search Tree - BST) 🌳:
        شرح علمي مبسط: هي هيكل بيانات شجري منظم، حيث تكون قيمة كل عقدة أكبر من جميع قيم العقد في فرعها الأيسر وأقل من جميع قيم العقد في فرعها الأيمن. هذا التنظيم يسهل عمليات البحث، الإضافة، والحذف بكفاءة عالية.
        الاستخدام داخل النظام: تُستخدم شجرة البحث الثنائية في "بيانات بلس" لتحسين كفاءة عمليات البحث عن البيانات المكررة أو المتشابهة. عند تحليل مجموعة بيانات كبيرة، يمكن تخزين العناصر في شجرة بحث ثنائية، مما يجعل عملية التحقق من وجود تكرارات أسرع بكثير.
        مثال تطبيقي: عند تنظيف قائمة بريدية طويلة جدًا من عناوين البريد الإلكتروني المكررة، يمكن إضافة كل عنوان بريد إلكتروني إلى شجرة بحث ثنائية. إذا حاول النظام إضافة عنوان موجود بالفعل، فسيتم اكتشافه بسرعة، مما يوفر وقتًا وجهدًا كبيرًا مقارنة بالبحث الخطي في القائمة بأكملها.
        
        7. **لغات البرمجة، التقنيات، وخوارزميات الذكاء الاصطناعي:**
        **لغات البرمجة 💻:**
        Swift: تُستخدم لتطوير تطبيق الجوال على منصة iOS لتقديم واجهة مستخدم سريعة وفعالة.
        Kotlin: تُستخدم لتطوير تطبيق الجوال على منصة Android لضمان التوافق والأداء الأمثل.
        Python: تُستخدم في الواجهة الخلفية لمعالجة البيانات وتطبيق الخوارزميات، وذلك لغناها بالمكتبات المتخصصة في تحليل البيانات.
       ** التقنيات المستخدمة 🛠️:**
        RESTful APIs: تُستخدم لتمكين الاتصال وتبادل البيانات بين تطبيق الجوال والواجهة الخلفية للنظام بشكل فعال وآمن.
        Docker: تُستخدم لحزم ونشر مكونات النظام كحاويات مستقلة، مما يضمن قابلية النقل وسهولة الإدارة.
        Git: يُستخدم لإدارة إصدارات الكود البرمجي والتعاون بين المطورين بشكل فعال.
       ** نوع قواعد البيانات 🗄️:**
        PostgreSQL: تُستخدم كقاعدة بيانات علائقية قوية وموثوقة لتخزين البيانات المنظمة وإدارة معلومات المستخدمين والعمليات.

        8. **التكامل مع الأنظمة الأخرى:**
        • إذا لم يتم تحديد نوع التكامل من قبل المستخدم، يُتجاهل هذا القسم تمامًا.
        • إذا تم تحديد نوع التكامل (مثل: API خارجي، ذكاء اصطناعي...):
        o شرح وظيفة التكامل عمليًا (مثل: تبادل بيانات، مزامنة حسابات، استخدام نماذج خارجية).
        o تحديد مكان حدوث التكامل داخل النظام.
        o شرح القيمة المضافة من هذا التكامل.

        """
    return prompt

# ----------------- Gemini Request -----------------
def ask_gemini(prompt):
    response = gemini_model.generate_content(prompt)
    return response.text.strip()

# ----------------- Extract JSON from Gemini Response -----------------
def extract_json_from_response(text):
    match = re.search(r"\{[\s\S]*\"generated_values\"[\s\S]*?\}", text)
    if match:
        try:
            import json
            raw_json = match.group(0)
            return json.loads(raw_json).get("generated_values", {})
        except Exception:
            return {}
    return {}

# ----------------- Extract National Direction Brief -----------------
def extract_national_direction_brief(text):
    pattern = r"(?:أي أن الهدف هو:|الهدف الوطني(?: هو)?:)([\s\S]{30,300})"
    match = re.search(pattern, text)
    if match:
        return match.group(1).strip()
    return None


# ----------------- API Endpoint -----------------
@app.route("/ping", methods=["GET"])
def ping():
    return jsonify({"message": "Server is awake"}), 200


# ----------------- API Endpoint -----------------
@app.route("/generate", methods=["POST"])
def generate():
    data = request.json or {}
    missing_required = [field for field in MANDATORY_FIELDS if not data.get(field)]

    if missing_required:
        return jsonify({
            "status": "error",
            "message": f"Missing mandatory fields: {', '.join(missing_required)}",
            "required_fields": MANDATORY_FIELDS,
            "optional_fields": OPTIONAL_FIELDS
        }), 400

    missing_optional = [field for field in OPTIONAL_FIELDS if not data.get(field)]
    prompt = build_prompt(data, missing_optional)
    gemini_output = ask_gemini(prompt)
    generated_values = extract_json_from_response(gemini_output)
    national_brief = extract_national_direction_brief(gemini_output)

    return jsonify({
        "status": "success",
        "message": "Project generated successfully",
        "missing_fields": missing_optional,
        "project_markdown": gemini_output,
        "generated_values": generated_values,
        "national_direction_brief": national_brief
    })

# ----------------- Run App -----------------
if __name__ == "__main__":
    print("App running locally at http://127.0.0.1:5000")
    app.run(port=5000, threaded=True)